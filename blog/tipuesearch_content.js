var tipuesearch = {"pages":[{"text":"2017Spring 機械設計工程系協同產品設計實習 課程倉儲: http://github.com/mdecourse/2017springcd 課程投影片: http://mdecourse.github.io/2017springcd 課程網誌: http://mdecourse.github.io/2017springcd/blog","url":"./pages/about/","tags":"misc","title":"About"},{"text":"Unofficial Windows Binaries for Python Extension Packages : https://www.lfd.uci.edu/~gohlke/pythonlibs/ 我在1/20號前利用python簡單編譯一個計算齒輪模數及速比的程式。原定是將使用matplotlib來對齒輪進行繪圖，而在安裝時遇到許多問題。以下為遇到問題之解決方法： 安裝matplotlib : 用git clone進行下載。在python shell上輸入import matplotlib。 遇到問題 : 缺少dateutil。 缺少dateutil : 輸入easy_install python-dateutil進行安裝。安裝好後將資料夾放至C:\\Python34\\Lib\\site-packages。 參考資料 : https://jingyan.baidu.com/article/aa6a2c14d5aa7f0d4c19c4e2.html 缺少six : 到'https://pypi.python.org/pypi/six'下載six-1.11.0-py2.py3-none-any.whl，接著至cmd輸入pip install six-1.11.0-py2.py3-none-any.whl (md5)。 將安裝好的資料夾six-1.10.0文件夾改名為six，並複製到C:\\Python34\\Lib\\site-packages路徑下 缺少__version__ : 去C:\\Python34\\Lib\\site-packages\\six路徑下，把six.py文件複製到C:\\Python34\\Lib\\site-packages路徑下。 參考資料 : https://read01.com/zh-tw/N6z0RK.html#.WmMVwKjXbIX 缺少pyparsing : 到'https://pypi.python.org/pypi/pyparsing/2.2.0'下載pyparsing-2.2.0-py2.py3-none-any.whl，在cmd上輸入pip install pyparsing-2.2.0-py2.py3-none-any.whl，並將安裝好後的資料夾移動至C:\\Python34\\Lib\\site-packages。 缺少__version__ : 在python shell上輸入import matplotlib後，出現AttributeError。與第4點不同，無法利用更改路徑解決。目前問題卡在這裡。 推測 : 經過查詢資料，可能是python3.6不兼容任何版本的pyparsing。","url":"./20180120-matplotlib-installation-problem.html","tags":"Course","title":"安裝matplotlib及其他模組遇到之問題"},{"text":"","url":"./2017springCD-Week18.html","tags":"Course","title":"2017CD第十八週"},{"text":"","url":"./2017springCD-Week17.html","tags":"Course","title":"2017CD第十七週"},{"text":"","url":"./2017springCD-Week16.html","tags":"Course","title":"2017CD第十六週"},{"text":"","url":"./2017springCD-Week15-2.html","tags":"Course","title":"2017CD第十五週-2"},{"text":"","url":"./2017springCD-Week15.html","tags":"Course","title":"2017CD第十五週"},{"text":"","url":"./2017springCD-Week14.html","tags":"Course","title":"2017CD第十四週"},{"text":"","url":"./2017springCD-Week13.html","tags":"Course","title":"2017CD第十三週"},{"text":"","url":"./2017springCD-Week12.html","tags":"Course","title":"2017CD第十二週"},{"text":"","url":"./2017springCD-Week11.html","tags":"Course","title":"2017CD第十一週"},{"text":"Python的語法介紹1 這邊以編輯簡單程式碼的一些指令為主 1.print(' ') :在兩個單引號之間輸入任何數字或文字,按下enter來執行就會出現你剛剛所輸入的內容 2.變數 :指定一個東西為某個東西 ,譬如說在視窗中輸入A = 125 , 按下enter執行的話下一行是空白的,這時候再輸入A,下一行會出現125 ,這是用來定義的功能 3.input :這是輸入資料的功能,譬如說輸入 A = input(),在下一行可以輸入","url":"./2017springCD-Week10.html","tags":"Course","title":"2017CD第十週"},{"text":"","url":"./2017springCD-Week9.html","tags":"Course","title":"2017CD第九週"},{"text":"簡介及介面介紹3: 此版本為更新版Pyslvs 0.9-beta.3,新增了一些功能 1.檔案區:新增了兩個範例Ball Lifter(Double six bar linkage), Crank Slider 2.機構區:新增了Batch moving功能,按下時可對畫布上的點做任意移動 3.左側方機構部分:開放點的滑塊功能和滑槽功能,介面中有部分修改,如下圖: (1)打勾的小圖示按一下可選取所有點或連桿,如下圖: (2)新增了點的滑槽和銷配合的功能,模擬滑塊作往復運動,運動如下: Pyslvs 0.9-beta.3 test1 Pin and Pin in slot from 40423248 on Vimeo . 配合時先定好驅動的部位,再來是定好要當作滑槽的點,該點要先設定為固定,接著再設定該點的狀態為Pin in slot(滑槽),之後是設定滑銷的點,該點要先定在滑槽外,並與活動桿的一端跟滑槽連接在一起,再調整滑銷的點位置,該位置要與滑槽充重疊,這樣才可以到Input(輸入)做模擬運動,如下: Pyslvs 0.9-beta.3 test2 Pin and Pin in slot from 40423248 on Vimeo . 4.左側方輸入部分:新增了Extreme rebound(極限回彈)的功能,當機構在運動時如遇到死點,此功能可以讓運動件回彈,可以做搖擺運動,如下: Pyslvs 0.9-beta.3 test3 Extreme rebound from 40423248 on Vimeo . (1)路徑區:這裡的紀錄功能新增了可調整紀錄移動點數量的功能,可任意調整要記錄多少點,如果說是限制記錄三百點,在讓桿件運動時按下按鈕,不管桿件轉了機圈的運動,紀錄移動點都只會記到三百點 4.左側方分析部分(數量和種類分析):介面變化如下: 這邊用的引擎是Graphviz,這是一個運用廣泛的命令行繪圖軟體，但是畫的圖並不是一般的漫畫或 logo，而是數學意義上的 \"graph\"(圖表)，比較通俗的說法就是「關係圖」。 裡面的形式如下: 1.dot:渲染的圖具有明確方向性 2.neato:渲染的圖缺乏方向性 3.fdp:渲染的圖缺乏方向性 4.twopi:渲染的圖採用放射性佈局 5.circo:渲染的圖採用環型佈局 6.shell: 7.circular: 8.spring: 9.spectral: 10.random:","url":"./2017springCD-Week8.html","tags":"Course","title":"2017CD第八週"},{"text":"補充0.9dev(Pyslvs 0.9-beta.1)左側邊的部分(藍框部分-3)的合成介面介紹: 在前面的部份有到說一使用程式就會直接跳出,是因為按了Process(處理)這個按鈕,這個功能是還沒有完成的,所以還不能用,在這邊對可以用的功能來試用: 藍色框中的內容(Path): 1.座標數目:顯示白框內目前有的座標數量 2.清除全部的座標:刪除白框內的所有座標 3.處理(轉換):此功能暫時無法使用,按了程式會跳掉 4.函數式導入座標:用此功能所提供的四個函數式來產生連續的座標路徑,可以任意設定變數值及範圍變化,介面如下圖: Formula: (1)f(x)=kx+c (2)f(x)=kx&#94;2+c (3)f(x)=k cos(x π/180)+c (4)f(x)=k sin(x π/180)+c 5.開啟csv文件檔:從外部開啟csv檔來導入座標 6.開啟excel文件檔:從外部開啟excel檔來導入座標 7.x座標和y座標的設定處:這邊可以任意設定x和y的座標點 8.加入座標:此按鈕可以把7.部分的座標加入到白框內 9.刪除座標:此按鈕可以在白框內選取的座標給移除 備註: 圖中以紅圈圍起來的兩個按鈕似乎功能不穩,點擊按鈕會讓程式跳掉 綠色框中的內容: 可以看到裡面有Driver和Follower這兩個選項,這兩個裡面有三個可調整的細節,上面兩個並排的是x和y的位置,下面的是調整左邊畫布區的抓取方框大小,如下圖: 紫色的Driver方框是用來抓取主動件的運動路徑,淺綠色的Follower方框是用來抓取從動件的運動路徑,範圍放的越大,轉換成運動圖的計算時間越長,相反的,範圍放的越小,計算時間越短 紅色框中的內容: 1.ZMQ generate: 2.Local Generate:以函數式產生的座標來生成另外的連桿運動圖,在程式內部執行,有座標時點擊按鈕會出現該視窗,如下圖: 橙色框中的內容: 1.白色框中出現的會是完成的動態圖 2.chart按鈕:此功能未開放,按了程式會跳出 3.delete按鈕:刪除產生的動態圖 4.merge按鈕:此功能未開放,按了程式會跳出 棕色框中的內容: 1.Four bar:產生的動態圖為四連桿 2.Eight bar:產生的動態圖為八連桿 3.Genetic Algorithm:此功能是基因演算法(遺傳演算法), 簡介: 基因演算法則的基本理論是由 Holland 於 1975 年首先提倡，是基於自然選擇過程的一種最佳化搜尋機構。 基因演算法則的三個主要運算子為複製 (reproduction)、交配 (crossover)、以及突變 (mutation)。 基因演算法是模仿兩性生殖的演化機制，使用交配、突變等機制，不斷改進群體適應的一種演算法。此方法廣泛被用在各個人工智慧領域，尤其是在最佳化問題上，遺傳演算法的表現往往相當優異。 4.Firefly Algorithm:此功能是螢火蟲演算法, 是一種啟發式算法，靈感來自於螢火蟲閃爍的行為。螢火蟲的閃光，其主要目的是作為一個信號系統，以吸引其他的螢火蟲，其假設為: 螢火蟲不分性別，這樣一個螢火蟲將會吸引到所有其他的螢火蟲 吸引力與它們的亮度成正比，對於任何兩個螢火蟲，不那麼明亮的螢火蟲被吸引，因此移動到更亮的一個，然而，亮度又隨著其距離的增加而減少 如果沒有比一個給定的螢火蟲更亮的螢火蟲，它會隨機移動 亮度應與目標函數聯繫起來。螢火蟲算法是以自然為靈感的啟發式優化算法 程式範例: using System; namespace FireflyAlgorithm { class FireflyProgram { static void Main(string[] args) { Console.WriteLine(\"Begin firefly demo\"); // Code here Console.WriteLine(\"End firefly demo\"); Console.ReadLine(); } static void ShowVector(double[] v, int dec, bool nl) { for (int i = 0; i < v.Length; ++i) Console.Write(v[i].ToString(\"F\" + dec) + \" \"); if (nl == true) Console.WriteLine(\"\"); } static double[] Solve(int numFireflies, int dim, int seed, int maxEpochs) { . . } static double Distance(double[] posA, double[] posB) { . . } static double Michalewicz(double[] xValues) { . . } static double Error(double[] xValues) { . . } } // Program public class Firefly : IComparable { // Defined here } } 5.Differential Evolution:此功能是差異進化演算法(微分進化演算法), 6.Adavance:這裡可以調整生成動態圖的細節 7.Time spent:計算生成動態圖的時間 以下是使用的概況: 在路徑中的白框內已經透過函數式功能產生了八個座標點,並透過Local Generate功能產生了三種動態圖(Genetic Algorithm, Firefly Algorithm, Differential Evolution),動態圖的樣子如下: Genetic Algorithm(四連桿): Firefly Algorithm(四連桿): Differential Evolution(四連桿): Genetic Algorithm(八連桿): Firefly Algorithm(八連桿): 無法產生,程式會跳掉 Differential Evolution(八連桿): 輸入一樣的數值,如用函數式f(x)=kx+c , 生k=2 , c=1 , x start from=1 , difference=0.5 ,end=5 ,生成的動態圖都有可能不一樣,好像是亂數決定的感覺,而產生的動態圖似乎還不太穩定,有時會出現感件全部不見,隔幾秒後才會出現,然後又消失,還有基因演算法和螢火蟲演算法用的時間會比較久,目前快的還是差異進化演算法","url":"./2017springCD-Week7.html","tags":"Course","title":"2017CD第七週"},{"text":"0.9dev(Pyslvs 0.9-beta.2)版本的問題: 機構區的部分: 接點的滑塊及滑槽功能還不能用,用了程式會直接跳 分析區的部分: Result部分的Chart(圖表化)和Merge(合併)這兩個功能用了程式會直接跳 產生的動態圖不穩定,只會有時候連桿和移動路徑會有突然的長時間空白,動態圖只會出現一下子 Path部分的兩個上下箭頭還是不能用,用了程式會直接跳 Process功能也未完成","url":"./2017springCD-Week6.html","tags":"Course","title":"2017CD第六週"},{"text":"簡介及介面介紹2: 此版本為更新版Pyslvs 0.9-beta.2,新增了一些功能,和修改了部分介面,如下: 檔案區的功能已全開放 1.開啟新的工作簿 2.讀取工作簿: 現在可以做存檔的動作 3.開啟範例: 新增三個範例檔案(1.曲柄搖桿機構) (2.單一組Jansen Linkage)(3.兩組Jansen Linkage) 4.導入(目前可以從四種來源導入檔案): (1)Pyslvs本身(特徵)(2)PMKS伺服器(3)範例(4)已儲存的檔案 5.送出和儲存: 可以搭配git倉儲,儲存時可以決定存放的分支 6.儲存到新的分支 也是搭配git倉儲,可儲存到另外的分支 7.另存為 8.儲藏 需搭配git指令,可以把進行到某種程度的工作先儲存到另一個分支,之後可在繼續進行 9.導出為: (1)Pyslvs特徵(2)圖片檔(如png , jpg , bmp等......)(3)PMKS網路 10.全螢幕 11.離開 輸入區: 這裡新增了調整旋轉速度的功能,可輸入任意的轉速,也可以逆時針旋轉 Path(路徑區)這裡新增了複製路徑的功能,在此記錄中的路徑可以選擇其中一個點,複製並貼到維度分析裡面做運算 左邊的分析區: 綠色方框中的內容: 為一種新的連桿計算方式,此功能目前還未完成,還在開發中 1.Reload from workbook:按下此按鈕可以把繪製的連桿機構資料傳到這裡來 2.Mainly for joint:此方框中會顯示該機構接點的顏色和座標軸 3.Mainly for link:此方框中會顯示該機構連桿的名稱和旋轉軸 4.Number of links:該機構的連桿數會顯示在這裡 5.Number of joints:該機構的接點數會顯示在這裡 6.Degree of freedom:調整自由度(不能用) 7.Number of combine:計算此連桿 8.Type combine:(不能用) 紅色方框中的內容: 維度分析: 此區的功能基本上和beta.1版本相同,有做了些修改: 1.路徑複製:可以把Input功能裡記錄的路徑位置複製貼上到Synthesis的Dimensional(維度分析)裡面,過程如下: Pyslvs 0.9-beta.2 test Copy path from 40423248 on Vimeo . 中間的轉換過程因為太久,所以中斷 2.Firefly Algorithm(八連桿)動態圖可以正常生成,程式不會跳掉 3.轉換動態圖的運算時間有稍微加快 版本控制區: Pyslvs 0.9-beta.2的版本控管獨立為個別的功能區,這裡的功能跟一般的存檔一樣,只是這裡會在軟體內多建立一個還原檔,目前都只能用master這個分支,還不能建立其他的分支,下圖:","url":"./2017springCD-Week5.html","tags":"Course","title":"2017CD第五週"},{"text":"0.9dev版本的問題: 1.動作執行太快時程式會直接跳掉: 譬如說返回上一個動作的指令(CTRL+Z)按的太快的時候,如下: 2.不能作搖擺運動: 在影片1:22~1:26時會脫離,如影片所示: Pyslvs 0.9-beta.1 test Robert Mechaniam from 40423248 on Vimeo . 3.多加一個受力桿件,機構會不能作動,如影片所示: Pyslvs 0.9-beta.1 test problem Force rod from 40423248 on Vimeo . 4.合成功能無法使用,試著隨機導入點座標,但只要一計算程式會直接跳掉,如下:","url":"./2017springCD-Week4.html","tags":"Course","title":"2017CD第四週"},{"text":"","url":"./2017springCD-Week3.html","tags":"Course","title":"2017CD第三週"},{"text":"","url":"./2017springCD-Week2.html","tags":"Course","title":"Pyslvs-user-manual-2"},{"text":"","url":"./2017springCD-Week1.html","tags":"Course","title":"Pyslvs-user-manual-1"}]};